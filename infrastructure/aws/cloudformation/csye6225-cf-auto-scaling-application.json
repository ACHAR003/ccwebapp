{  
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"Application JSON",
    "Parameters":{  
        "StackName":{  
            "Type":"String",
            "Description":"Enter Stack Name"
        },
        "NetworkStackName":{  
            "Type":"String",
            "Description":"Enter Network stack name"
        },
        "AmiId":{  
            "Type":"String",
            "Description":"Enter AMI ID"
        },
        "KeyName":{  
            "Type":"String",
            "Description":"Please enter string for Key Name"
        },
        "BucketName":{  
            "Description":"Enter Bucket Name",
            "Type":"String"
        },
        "CertificateArn":{  
            "Description":"Enter Certificate Arn",
            "Type":"String"
        },
        "stackPrefix":{  
            "Type":"String",
            "Description":"The prefix to use when naming resources in this stack. Normally we would use the stack name, but since this template can be used as a resource in other stacks we want to keep the naming consistent. No symbols allowed.",
            "ConstraintDescription":"Alphanumeric characters only, maximum 10 characters",
            "AllowedPattern":"^[a-zA-z0-9]+$",
            "MaxLength":10,
            "Default":"generic"
        },
        "stackScope":{  
            "Type":"String",
            "Description":"You can deploy this stack at a regional level, for regional WAF targets like Application Load Balancers, or for global targets, such as Amazon CloudFront distributions.",
            "AllowedValues":[  
                "Global",
                "Regional"
            ],
            "Default":"Regional"
        },
        "ruleAction":{  
            "Type":"String",
            "Description":"The type of action you want to iplement for the rules in this set. Valid options are COUNT or BLOCK.",
            "AllowedValues":[  
                "BLOCK",
                "COUNT"
            ],
            "Default":"BLOCK"
        },
        "includesPrefix":{  
            "Type":"String",
            "Description":"This is the URI path prefix (starting with '/') that identifies any files in your webroot that are server-side included components, and should not be invoked directly via URL. These can be headers, footers, 3rd party server side libraries or components. You can add additional prefixes later directly in the set.",
            "Default":"/includes"
        },
        "adminUrlPrefix":{  
            "Type":"String",
            "Description":"This is the URI path prefix (starting with '/') that identifies your administrative sub-site. You can add additional prefixes later directly in the set.",
            "Default":"/admin"
        },
        "adminRemoteCidr":{  
            "Type":"String",
            "Description":"This is the IP address allowed to access your administrative interface. Use CIDR notation. You can add additional ones later directly in the set.",
            "Default":"127.0.0.1/32"
        },
        "maxExpectedURISize":{  
            "Type":"Number",
            "Description":"Maximum number of bytes allowed in the URI component of the HTTP request. Generally the maximum possible value is determined by the server operating system (maps to file system paths), the web server software, or other middleware components. Choose a value that accomodates the largest URI segment you use in practice in your web application.",
            "Default":512
        },
        "maxExpectedQueryStringSize":{  
            "Type":"Number",
            "Description":"Maximum number of bytes allowed in the query string component of the HTTP request. Normally the  of query string parameters following the \"?\" in a URL is much larger than the URI , but still bounded by the  of the parameters your web application uses and their values.",
            "Default":1024
        },
        "maxExpectedBodySize":{  
            "Type":"Number",
            "Description":"Maximum number of bytes allowed in the body of the request. If you do not plan to allow large uploads, set it to the largest payload value that makes sense for your web application. Accepting unnecessarily large values can cause performance issues, if large payloads are used as an attack vector against your web application.",
            "Default":4096
        },
        "maxExpectedCookieSize":{  
            "Type":"Number",
            "Description":"Maximum number of bytes allowed in the cookie header. The maximum size should be less than 4096, the size is determined by the amount of information your web application stores in cookies. If you only pass a session token via cookies, set the size to no larger than the serialized size of the session token and cookie metadata.",
            "Default":4093
        },
        "csrfExpectedHeader":{  
            "Type":"String",
            "Description":"The custom HTTP request header, where the CSRF token value is expected to be encountered",
            "Default":"x-csrf-token"
        },
        "csrfExpectedSize":{  
            "Type":"Number",
            "Description":"The size in bytes of the CSRF token value. For example if it's a canonically formatted UUIDv4 value the expected size would be 36 bytes/ASCII characters",
            "Default":36
        }
    },
    "Metadata":{  
        "AWS::CloudFormation::Interface":{  
            "ParameterGroups":[  
                {  
                    "Label":{  
                        "default":"Resource Prefix"
                    },
                    "Parameters":[  
                        "stackPrefix"
                    ]
                },
                {  
                    "Label":{  
                        "default":"WAF Implementation"
                    },
                    "Parameters":[  
                        "stackScope",
                        "ruleAction"
                    ]
                },
                {  
                    "Label":{  
                        "default":"Generic HTTP Request Enforcement"
                    },
                    "Parameters":[  
                        "maxExpectedURISize",
                        "maxExpectedQueryStringSize",
                        "maxExpectedBodySize",
                        "maxExpectedCookieSize"
                    ]
                },
                {  
                    "Label":{  
                        "default":"Administrative Interface"
                    },
                    "Parameters":[  
                        "adminUrlPrefix",
                        "adminRemoteCidr"
                    ]
                },
                {  
                    "Label":{  
                        "default":"Cross-Site Request Forgery (CSRF)"
                    },
                    "Parameters":[  
                        "csrfExpectedHeader",
                        "csrfExpectedSize"
                    ]
                },
                {  
                    "Label":{  
                        "default":"Application Specific"
                    },
                    "Parameters":[  
                        "includesPrefix"
                    ]
                }
            ],
            "ParameterLabels":{  
                "stackPrefix":{  
                    "default":"Resource Name Prefix"
                },
                "stackScope":{  
                    "default":"Apply to WAF"
                },
                "ruleAction":{  
                    "default":"Rule Effect"
                },
                "includesPrefix":{  
                    "default":"Server-side components URI prefix"
                },
                "adminUrlPrefix":{  
                    "default":"URI prefix"
                },
                "adminRemoteCidr":{  
                    "default":"Allowed IP source (CIDR)"
                },
                "maxExpectedURISize":{  
                    "default":"Max. size of URI"
                },
                "maxExpectedQueryStringSize":{  
                    "default":"Max. size of QUERY STRING"
                },
                "maxExpectedBodySize":{  
                    "default":"Max. size of BODY"
                },
                "maxExpectedCookieSize":{  
                    "default":"Max. size of COOKIE"
                },
                "csrfExpectedHeader":{  
                    "default":"HTTP Request Header"
                },
                "csrfExpectedSize":{  
                    "default":"Token Size"
                }
            }
        }
    },
    "Conditions":{  
        "isRegional":{  
            "Fn::Equals":[  
                {  
                    "Ref":"stackScope"
                },
                "Regional"
            ]
        },
        "isGlobal":{  
            "Fn::Equals":[  
                {  
                    "Ref":"stackScope"
                },
                "Global"
            ]
        }
    },
    "Resources":{  
        "ELBSecurityGroup":{  
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{  
                "GroupDescription":"Security group for the ELB",
                "VpcId":{  
                    "Fn::ImportValue":{  
                        "Fn::Sub":"${NetworkStackName}-vpcid"
                    }
                },
                "SecurityGroupIngress":[  
                    {  
                        "IpProtocol":"tcp",
                        "FromPort":443,
                        "ToPort":443,
                        "CidrIp":"0.0.0.0/0"
                    }
                ]
            }
        },
        "WebServerSecurityGroup":{  
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{  
                "GroupDescription":"This Security Group is for Webserver",
                "VpcId":{  
                    "Fn::ImportValue":{  
                        "Fn::Sub":"${NetworkStackName}-vpcid"
                    }
                },
                "SecurityGroupIngress":[  
                    {  
                        "IpProtocol":"tcp",
                        "FromPort":"80",
                        "ToPort":"80",
                        "SourceSecurityGroupId":{  
                            "Fn::GetAtt":[  
                                "ELBSecurityGroup",
                                "GroupId"
                            ]
                        }
                    },
                    {  
                        "IpProtocol":"tcp",
                        "FromPort":"22",
                        "ToPort":"22",
                        "CidrIp":"0.0.0.0/0"
                    }
                ]
            }
        },
        "DBServerSecurityGroup":{  
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{  
                "GroupDescription":"Enable SSH ingress",
                "VpcId":{  
                    "Fn::ImportValue":{  
                        "Fn::Sub":"${NetworkStackName}-vpcid"
                    }
                },
                "SecurityGroupIngress":[  
                    {  
                        "IpProtocol":"tcp",
                        "FromPort":"3306",
                        "ToPort":"3306",
                        "SourceSecurityGroupId":{  
                            "Fn::GetAtt":[  
                                "WebServerSecurityGroup",
                                "GroupId"
                            ]
                        }
                    }
                ]
            }
        },
        "WebServerGroup":{  
            "Type":"AWS::AutoScaling::AutoScalingGroup",
            "Properties":{  
                "VPCZoneIdentifier":[  
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet1id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet2id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet3id"
                        }
                    }
                ],
                "LaunchConfigurationName":"asg_launch_config",
                "Tags":[  
                    {  
                        "PropagateAtLaunch":true,
                        "Key":"Environment",
                        "Value":"Cloud"
                    }
                ],
                "MinSize":"3",
                "MaxSize":"7",
		"DesiredCapacity" : "3",
                "Cooldown":"60",
                "TargetGroupARNs":[  
                    {  
                        "Ref":"ALBTargetGroup"
                    },
                    {  
                        "Ref":"NoWAFALBTargetGroup"
                    }
                ]
            },
	    "DependsOn" : "LaunchConfig"
        },
        "LaunchConfig":{  
            "Type":"AWS::AutoScaling::LaunchConfiguration",
            "Properties":{  
                "ImageId":{  
                    "Ref":"AmiId"
                },
                "InstanceType":"t2.micro",
                "KeyName":{  
                    "Ref":"KeyName"
                },
                "AssociatePublicIpAddress":"true",
                "IamInstanceProfile":{  
                    "Fn::ImportValue":"EC2InstanceProfile"
                },
                "LaunchConfigurationName":"asg_launch_config",
                "SecurityGroups":[  
                    {  
                        "Ref":"WebServerSecurityGroup"
                    }
                ],
                "UserData":{  
                    "Fn::Base64":{  
                        "Fn::Join":[  
                            "",
                            [  
                                "#!/bin/bash \n",
                                "echo export DB_HOST=",
                                {  
                                    "Fn::GetAtt":[  
                                        "myRDS",
                                        "Endpoint.Address"
                                    ]
                                },
                                " >> /etc/profile \n",
                                "echo export DB_PORT=",
                                {  
                                    "Fn::GetAtt":[  
                                        "myRDS",
                                        "Endpoint.Port"
                                    ]
                                },
                                " >> /etc/profile \n",
                                "echo export DB_USERNAME='csye6225master' >> /etc/profile \n",
                                "echo export DB_PASSWORD='csye6225password' >> /etc/profile \n",
                                "echo export S3_BUCKET=",
                                {  
                                    "Fn::Sub":"csye6225-su19-${BucketName}.me.csye6225.com"
                                },
                                " >> /etc/profile \n",
                                "echo export SNS_TOPIC=",
                                {  
                                    "Ref":"mySNSTopic"
                                },
                                " >> /etc/profile \n",
                                "source /etc/profile \n",
                                "sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080"
                            ]
                        ]
                    }
                }
            }
        },
        "myDBSubnetGroup":{  
            "Type":"AWS::RDS::DBSubnetGroup",
            "Properties":{  
                "DBSubnetGroupDescription":"This is subnet description",
                "SubnetIds":[  
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet1id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet2id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet3id"
                        }
                    }
                ]
            }
        },
        "myRDS":{  
            "Type":"AWS::RDS::DBInstance",
            "Properties":{  
                "AllocatedStorage":"60",
                "DBInstanceClass":"db.m4.large",
                "MultiAZ":"false",
                "DBInstanceIdentifier":"csye6225-su19",
                "MasterUsername":"csye6225master",
                "Engine":"MariaDB",
                "MasterUserPassword":"csye6225password",
                "DBSubnetGroupName":{  
                    "Ref":"myDBSubnetGroup"
                },
                "VPCSecurityGroups":[  
                    {  
                        "Ref":"DBServerSecurityGroup"
                    }
                ],
                "PubliclyAccessible":"true",
                "DBName":"csye6225"
            }
        },
        "myDynamoDBTable":{  
            "Type":"AWS::DynamoDB::Table",
            "Properties":{  
                "TableName":"csye6225",
                "TimeToLiveSpecification":{  
                    "AttributeName":"expiration",
                    "Enabled":"true"
                },
                "AttributeDefinitions":[  
                    {  
                        "AttributeName":"id",
                        "AttributeType":"S"
                    }
                ],
                "KeySchema":[  
                    {  
                        "AttributeName":"id",
                        "KeyType":"HASH"
                    }
                ],
                "ProvisionedThroughput":{  
                    "ReadCapacityUnits":"5",
                    "WriteCapacityUnits":"5"
                }
            }
        },
        "CodeDeployApplication":{  
            "Type":"AWS::CodeDeploy::Application",
            "Properties":{  
                "ApplicationName":"csye6225-webapp",
                "ComputePlatform":"Server"
            }
        },
        "CodeDeployDeploymentGroup":{  
            "Type":"AWS::CodeDeploy::DeploymentGroup",
            "Properties":{  
                "ApplicationName":{  
                    "Ref":"CodeDeployApplication"
                },
                "DeploymentGroupName":"csye6225-webapp-deployment",
                "ServiceRoleArn":{  
                    "Fn::ImportValue":"CodeDeployServiceRole"
                },
                "DeploymentStyle":{  
                    "DeploymentType":"IN_PLACE",
                    "DeploymentOption":"WITH_TRAFFIC_CONTROL"
                },
		"LoadBalancerInfo" : {
	           "TargetGroupInfoList" : [ {"Name" : {"Fn::GetAtt" : ["ALBTargetGroup", "TargetGroupName"]} }]
	        },
                "Ec2TagFilters":[  
                    {  
                        "Key":"Environment",
                        "Value":"Cloud",
                        "Type":"KEY_AND_VALUE"
                    }
                ],
                "DeploymentConfigName":"CodeDeployDefault.AllAtOnce",
                "AutoRollbackConfiguration":{  
                    "Enabled":"true",
                    "Events":[  
                        "DEPLOYMENT_FAILURE"
                    ]
                },
                "AutoScalingGroups":[  
                    {  
                        "Ref":"WebServerGroup"
                    }
                ]
            }
        },
        "mySNSTopic":{  
            "Type":"AWS::SNS::Topic",
            "Properties":{  
                "DisplayName":"password_reset",
                "Subscription":[  
                    {  
                        "Endpoint":{  
                            "Fn::GetAtt":[  
                                "myLambdaFunction",
                                "Arn"
                            ]
                        },
                        "Protocol":"lambda"
                    }
                ],
                "TopicName":"password_reset"
            }
        },
        "myLambdaFunction":{  
            "Type":"AWS::Lambda::Function",
            "Properties":{  
                "Code":{  
                    "S3Bucket":{  
                        "Fn::Sub":"code-deploy.csye6225-su19-${BucketName}.me"
                    },
                    "S3Key":"LambdaPackage.zip"
                },
                "Description":"Lambda Function to reset password",
                "FunctionName":"password_reset",
                "Handler":"lambda.DynamoLambda::handleRequest",
                "MemorySize":512,
                "Role":{  
                    "Fn::ImportValue":"LambdaExecutionRole"
                },
                "Environment":{  
                    "Variables":{  
                        "AWS_DOMAIN_NAME":{  
                            "Ref":"BucketName"
                        }
                    }
                },
                "Runtime":"java8",
                "Timeout":300,
                "TracingConfig":{  
                    "Mode":"Active"
                }
            }
        },
        "LambdaPermission":{  
            "Type":"AWS::Lambda::Permission",
            "Properties":{  
                "Action":"lambda:InvokeFunction",
                "FunctionName":{  
                    "Ref":"myLambdaFunction"
                },
                "Principal":"sns.amazonaws.com"
            }
        },
        "ElasticLoadBalancer":{  
            "Type":"AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties":{  
                "Subnets":[  
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet1id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet2id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet3id"
                        }
                    }
                ],
                "Scheme":"internet-facing",
                "Name":"LOAD-BALANCER",
                "SecurityGroups":[  
                    {  
                        "Ref":"ELBSecurityGroup"
                    }
                ]
            }
        },
        "NoWAFElasticLoadBalancer":{  
            "Type":"AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties":{  
                "Subnets":[  
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet1id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet2id"
                        }
                    },
                    {  
                        "Fn::ImportValue":{  
                            "Fn::Sub":"${NetworkStackName}-subnet3id"
                        }
                    }
                ],
                "Scheme":"internet-facing",
                "Name":"NOWAF-LOAD-BALANCER",
                "SecurityGroups":[  
                    {  
                        "Ref":"ELBSecurityGroup"
                    }
                ]
            }
        },
        "Route53RecordSet":{  
            "Type":"AWS::Route53::RecordSet",
            "Properties":{  
                "AliasTarget":{  
                    "DNSName":{  
                        "Fn::GetAtt":[  
                            "ElasticLoadBalancer",
                            "DNSName"
                        ]
                    },
                    "HostedZoneId":{  
                        "Fn::GetAtt":[  
                            "ElasticLoadBalancer",
                            "CanonicalHostedZoneID"
                        ]
                    }
                },
                "HostedZoneName":{  
                    "Fn::Sub":"csye6225-su19-${BucketName}.me."
                },
                "Name":{  
                    "Fn::Sub":"csye6225-su19-${BucketName}.me"
                },
                "Type":"A"
            }
        },
        "NoWAFRoute53RecordSet":{  
            "Type":"AWS::Route53::RecordSet",
            "Properties":{  
                "AliasTarget":{  
                    "DNSName":{  
                        "Fn::GetAtt":[  
                            "NoWAFElasticLoadBalancer",
                            "DNSName"
                        ]
                    },
                    "HostedZoneId":{  
                        "Fn::GetAtt":[  
                            "NoWAFElasticLoadBalancer",
                            "CanonicalHostedZoneID"
                        ]
                    }
                },
                "HostedZoneName":{  
                    "Fn::Sub":"csye6225-su19-${BucketName}.me."
                },
                "Name":{  
                    "Fn::Sub":"nowaf.csye6225-su19-${BucketName}.me"
                },
                "Type":"A"
            }
        },
        "HttpsListener":{  
            "Type":"AWS::ElasticLoadBalancingV2::Listener",
            "Properties":{  
                "Certificates":[  
                    {  
                        "CertificateArn":{  
                            "Ref":"CertificateArn"
                        }
                    }
                ],
                "DefaultActions":[  
                    {  
                        "Type":"forward",
                        "TargetGroupArn":{  
                            "Ref":"ALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn":{  
                    "Ref":"ElasticLoadBalancer"
                },
                "Port":443,
                "Protocol":"HTTPS"
            }
        },
        "NoWAFHttpsListener":{  
            "Type":"AWS::ElasticLoadBalancingV2::Listener",
            "Properties":{  
                "Certificates":[  
                    {  
                        "CertificateArn":{  
                            "Ref":"CertificateArn"
                        }
                    }
                ],
                "DefaultActions":[  
                    {  
                        "Type":"forward",
                        "TargetGroupArn":{  
                            "Ref":"NoWAFALBTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn":{  
                    "Ref":"NoWAFElasticLoadBalancer"
                },
                "Port":443,
                "Protocol":"HTTPS"
            }
        },
        "ALBTargetGroup":{  
            "Type":"AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties":{  
                "HealthCheckPath":"/LibrarySystem",
                "Matcher":{  
                    "HttpCode":"200-499"
                },
                "HealthCheckIntervalSeconds":30,
                "UnhealthyThresholdCount":5,
                "HealthyThresholdCount":3,
		"Name":"ALBTargetGroup",
                "Port":80,
                "Protocol":"HTTP",
                "UnhealthyThresholdCount":5,
                "VpcId":{  
                    "Fn::ImportValue":{  
                        "Fn::Sub":"${NetworkStackName}-vpcid"
                    }
                },
		"TargetGroupAttributes": [
               {
                   "Key": "stickiness.enabled",
                   "Value": "true"
               },
	       {
                   "Key": "deregistration_delay.timeout_seconds",
                   "Value": "20"
               }]
            }
        },
        "NoWAFALBTargetGroup":{  
            "Type":"AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties":{  
                "HealthCheckPath":"/LibrarySystem",
                "Matcher":{  
                    "HttpCode":"200-499"
                },
                "HealthCheckIntervalSeconds":30,
                "UnhealthyThresholdCount":5,
                "HealthyThresholdCount":3,
		"Name":"NoWAFALBTargetGroup",
                "Port":80,
                "Protocol":"HTTP",
                "UnhealthyThresholdCount":5,
                "VpcId":{  
                    "Fn::ImportValue":{  
                        "Fn::Sub":"${NetworkStackName}-vpcid"
                    }
                },
		"TargetGroupAttributes": [
               {
                   "Key": "stickiness.enabled",
                   "Value": "true"
               },
	       {
                   "Key": "deregistration_delay.timeout_seconds",
                   "Value": "20"
               }]
            }
        },
        "WebServerScaleUpPolicy":{  
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{  
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{  
                    "Ref":"WebServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"1"
            }
        },
        "WebServerScaleDownPolicy":{  
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{  
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{  
                    "Ref":"WebServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"-1"
            }
        },
        "CPUAlarmHigh":{  
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{  
                "AlarmDescription":"Scale-up if CPU > 5% for 1 minute",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"60",
                "EvaluationPeriods":"2",
                "Threshold":"5",
                "AlarmActions":[  
                    {  
                        "Ref":"WebServerScaleUpPolicy"
                    }
                ],
                "Dimensions":[  
                    {  
                        "Name":"AutoScalingGroupName",
                        "Value":{  
                            "Ref":"WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"GreaterThanThreshold"
            }
        },
        "CPUAlarmLow":{  
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{  
                "AlarmDescription":"Scale-down if CPU < 3% for 1 minute",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"60",
                "EvaluationPeriods":"2",
                "Threshold":"3",
                "AlarmActions":[  
                    {  
                        "Ref":"WebServerScaleDownPolicy"
                    }
                ],
                "Dimensions":[  
                    {  
                        "Name":"AutoScalingGroupName",
                        "Value":{  
                            "Ref":"WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"LessThanThreshold"
            }
        },
        "wafrSQLiSet":{  
            "Type":"AWS::WAFRegional::SqlInjectionMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-sqli"
                        ]
                    ]
                },
                "SqlInjectionMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    }
                ]
            }
        },
        "wafgSQLiSet":{  
            "Type":"AWS::WAF::SqlInjectionMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-sqli"
                        ]
                    ]
                },
                "SqlInjectionMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    }
                ]
            }
        },
        "wafrSQLiRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigatesqli"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigatesqli"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"SqlInjectionMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrSQLiSet"
                        }
                    }
                ]
            }
        },
        "wafgSQLiRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigatesqli"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigatesqli"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"SqlInjectionMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgSQLiSet"
                        }
                    }
                ]
            }
        },
        "wafrAuthTokenStringSet":{  
            "Type":"AWS::WAFRegional::ByteMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-auth-tokens"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"example-session-id",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"authorization"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ",
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafgAuthTokenStringSet":{  
            "Type":"AWS::WAF::ByteMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-auth-tokens"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"example-session-id",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"authorization"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ",
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafrAuthTokenRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "badauthtokens"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-bad-auth-tokens"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrAuthTokenStringSet"
                        }
                    }
                ]
            }
        },
        "wafgAuthTokenRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "badauthtokens"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-bad-auth-tokens"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgAuthTokenStringSet"
                        }
                    }
                ]
            }
        },
        "wafrXSSSet":{  
            "Type":"AWS::WAFRegional::XssMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-xss"
                        ]
                    ]
                },
                "XssMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    }
                ]
            }
        },
        "wafgXSSSet":{  
            "Type":"AWS::WAF::XssMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-xss"
                        ]
                    ]
                },
                "XssMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    }
                ]
            }
        },
        "wafrXSSRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigatexss"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigate-xss"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"XssMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrXSSSet"
                        }
                    }
                ]
            }
        },
        "wafgXSSRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigatexss"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "mitigate-xss"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"XssMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgXSSSet"
                        }
                    }
                ]
            }
        },
        "wafrPathsStringSet":{  
            "Type":"AWS::WAFRegional::ByteMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-rfi-lfi-traversal"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    }
                ]
            }
        },
        "wafgPathsStringSet":{  
            "Type":"AWS::WAF::ByteMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-rfi-lfi-traversal"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"../",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"://",
                        "TextTransformation":"HTML_ENTITY_DECODE"
                    }
                ]
            }
        },
        "wafrPathsRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectrfilfi"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-rfi-lfi-traversal"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrPathsStringSet"
                        }
                    }
                ]
            }
        },
        "wafgPathsRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectrfilfi"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-rfi-lfi-traversal"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgPathsStringSet"
                        }
                    }
                ]
            }
        },
        "wafrAdminUrlStringSet":{  
            "Type":"AWS::WAFRegional::ByteMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-admin-url"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"STARTS_WITH",
                        "TargetString":{  
                            "Ref":"adminUrlPrefix"
                        },
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafgAdminUrlStringSet":{  
            "Type":"AWS::WAF::ByteMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-admin-url"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"STARTS_WITH",
                        "TargetString":{  
                            "Ref":"adminUrlPrefix"
                        },
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafrAdminRemoteAddrIpSet":{  
            "Type":"AWS::WAFRegional::IPSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-admin-remote-ip"
                        ]
                    ]
                },
                "IPSetDescriptors":[  
                    {  
                        "Type":"IPV4",
                        "Value":{  
                            "Ref":"adminRemoteCidr"
                        }
                    }
                ]
            }
        },
        "wafgAdminRemoteAddrIpSet":{  
            "Type":"AWS::WAF::IPSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-admin-remote-ip"
                        ]
                    ]
                },
                "IPSetDescriptors":[  
                    {  
                        "Type":"IPV4",
                        "Value":{  
                            "Ref":"adminRemoteCidr"
                        }
                    }
                ]
            }
        },
        "wafrAdminAccessRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectadminaccess"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-admin-access"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrAdminUrlStringSet"
                        }
                    },
                    {  
                        "Type":"IPMatch",
                        "Negated":true,
                        "DataId":{  
                            "Ref":"wafrAdminRemoteAddrIpSet"
                        }
                    }
                ]
            }
        },
        "wafgAdminAccessRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectadminaccess"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-admin-access"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgAdminUrlStringSet"
                        }
                    },
                    {  
                        "Type":"IPMatch",
                        "Negated":true,
                        "DataId":{  
                            "Ref":"wafgAdminRemoteAddrIpSet"
                        }
                    }
                ]
            }
        },
        "wafrPHPInsecureQSStringSet":{  
            "Type":"AWS::WAFRegional::ByteMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-php-insecure-var-refs"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"_SERVER[",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"_ENV[",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"auto_prepend_file=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"auto_append_file=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"allow_url_include=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"disable_functions=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"open_basedir=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"safe_mode=",
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafgPHPInsecureQSStringSet":{  
            "Type":"AWS::WAF::ByteMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-php-insecure-var-refs"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"_SERVER[",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"_ENV[",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"auto_prepend_file=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"auto_append_file=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"allow_url_include=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"disable_functions=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"open_basedir=",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "PositionalConstraint":"CONTAINS",
                        "TargetString":"safe_mode=",
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafrPHPInsecureURIStringSet":{  
            "Type":"AWS::WAFRegional::ByteMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-php-insecure-uri"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":"php",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":"/",
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafgPHPInsecureURIStringSet":{  
            "Type":"AWS::WAF::ByteMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-php-insecure-uri"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":"php",
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":"/",
                        "TextTransformation":"URL_DECODE"
                    }
                ]
            }
        },
        "wafrPHPInsecureRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectphpinsecure"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-php-insecure"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrPHPInsecureQSStringSet"
                        }
                    },
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrPHPInsecureURIStringSet"
                        }
                    }
                ]
            }
        },
        "wafgPHPInsecureRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectphpinsecure"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-php-insecure"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgPHPInsecureQSStringSet"
                        }
                    },
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgPHPInsecureURIStringSet"
                        }
                    }
                ]
            }
        },
        "wafrSizeRestrictionSet":{  
            "Type":"AWS::WAFRegional::SizeConstraintSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "size-restrictions"
                        ]
                    ]
                },
                "SizeConstraints":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedURISize"
                        }
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedQueryStringSize"
                        }
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedBodySize"
                        }
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedCookieSize"
                        }
                    }
                ]
            }
        },
        "wafgSizeRestrictionSet":{  
            "Type":"AWS::WAF::SizeConstraintSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "size-restrictions"
                        ]
                    ]
                },
                "SizeConstraints":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedURISize"
                        }
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"QUERY_STRING"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedQueryStringSize"
                        }
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"BODY"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedBodySize"
                        }
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":"cookie"
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"GT",
                        "Size":{  
                            "Ref":"maxExpectedCookieSize"
                        }
                    }
                ]
            }
        },
        "wafrSizeRestrictionRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "restrictsizes"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "restrict-sizes"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"SizeConstraint",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrSizeRestrictionSet"
                        }
                    }
                ]
            }
        },
        "wafgSizeRestrictionRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "restrictsizes"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "restrict-sizes"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"SizeConstraint",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgSizeRestrictionSet"
                        }
                    }
                ]
            }
        },
        "wafrCSRFMethodStringSet":{  
            "Type":"AWS::WAFRegional::ByteMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-csrf-method"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"METHOD"
                        },
                        "PositionalConstraint":"EXACTLY",
                        "TargetString":"post",
                        "TextTransformation":"LOWERCASE"
                    }
                ]
            }
        },
        "wafgCSRFMethodStringSet":{  
            "Type":"AWS::WAF::ByteMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-csrf-method"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"METHOD"
                        },
                        "PositionalConstraint":"EXACTLY",
                        "TargetString":"post",
                        "TextTransformation":"LOWERCASE"
                    }
                ]
            }
        },
        "wafrCSRFTokenSizeConstraint":{  
            "Type":"AWS::WAFRegional::SizeConstraintSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-csrf-token"
                        ]
                    ]
                },
                "SizeConstraints":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":{  
                                "Ref":"csrfExpectedHeader"
                            }
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"EQ",
                        "Size":{  
                            "Ref":"csrfExpectedSize"
                        }
                    }
                ]
            }
        },
        "wafgCSRFTokenSizeConstraint":{  
            "Type":"AWS::WAF::SizeConstraintSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-csrf-token"
                        ]
                    ]
                },
                "SizeConstraints":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"HEADER",
                            "Data":{  
                                "Ref":"csrfExpectedHeader"
                            }
                        },
                        "TextTransformation":"NONE",
                        "ComparisonOperator":"EQ",
                        "Size":{  
                            "Ref":"csrfExpectedSize"
                        }
                    }
                ]
            }
        },
        "wafrCSRFRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "enforcecsrf"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "enforce-csrf"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrCSRFMethodStringSet"
                        }
                    },
                    {  
                        "Type":"SizeConstraint",
                        "Negated":true,
                        "DataId":{  
                            "Ref":"wafrCSRFTokenSizeConstraint"
                        }
                    }
                ]
            }
        },
        "wafgCSRFRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "enforcecsrf"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "enforce-csrf"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgCSRFMethodStringSet"
                        }
                    },
                    {  
                        "Type":"SizeConstraint",
                        "Negated":true,
                        "DataId":{  
                            "Ref":"wafgCSRFTokenSizeConstraint"
                        }
                    }
                ]
            }
        },
        "wafrServerSideIncludeStringSet":{  
            "Type":"AWS::WAFRegional::ByteMatchSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-ssi"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"STARTS_WITH",
                        "TargetString":{  
                            "Ref":"includesPrefix"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".cfg",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".conf",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".config",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".ini",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".log",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".bak",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".backup",
                        "TextTransformation":"LOWERCASE"
                    }
                ]
            }
        },
        "wafgServerSideIncludeStringSet":{  
            "Type":"AWS::WAF::ByteMatchSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-ssi"
                        ]
                    ]
                },
                "ByteMatchTuples":[  
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"STARTS_WITH",
                        "TargetString":{  
                            "Ref":"includesPrefix"
                        },
                        "TextTransformation":"URL_DECODE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".cfg",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".conf",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".config",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".ini",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".log",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".bak",
                        "TextTransformation":"LOWERCASE"
                    },
                    {  
                        "FieldToMatch":{  
                            "Type":"URI"
                        },
                        "PositionalConstraint":"ENDS_WITH",
                        "TargetString":".backup",
                        "TextTransformation":"LOWERCASE"
                    }
                ]
            }
        },
        "wafrServerSideIncludeRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectssi"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-ssi"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrServerSideIncludeStringSet"
                        }
                    }
                ]
            }
        },
        "wafgServerSideIncludeRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detectssi"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-ssi"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"ByteMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgServerSideIncludeStringSet"
                        }
                    }
                ]
            }
        },
        "wafrBlacklistIpSet":{  
            "Type":"AWS::WAFRegional::IPSet",
            "Condition":"isRegional",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-blacklisted-ips"
                        ]
                    ]
                },
                "IPSetDescriptors":[  
                    {  
                        "Type":"IPV4",
                        "Value":"10.0.0.0/8"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"192.168.0.0/16"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"169.254.0.0/16"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"172.16.0.0/16"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"127.0.0.1/32"
                    }
                ]
            }
        },
        "wafgBlacklistIpSet":{  
            "Type":"AWS::WAF::IPSet",
            "Condition":"isGlobal",
            "Properties":{  
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "match-blacklisted-ips"
                        ]
                    ]
                },
                "IPSetDescriptors":[  
                    {  
                        "Type":"IPV4",
                        "Value":"10.0.0.0/8"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"192.168.0.0/16"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"169.254.0.0/16"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"172.16.0.0/16"
                    },
                    {  
                        "Type":"IPV4",
                        "Value":"127.0.0.1/32"
                    }
                ]
            }
        },
        "wafrBlacklistIpRule":{  
            "Type":"AWS::WAFRegional::Rule",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "blacklistedips"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-blacklisted-ips"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"IPMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafrBlacklistIpSet"
                        }
                    }
                ]
            }
        },
        "wafgBlacklistIpRule":{  
            "Type":"AWS::WAF::Rule",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "blacklistedips"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "detect-blacklisted-ips"
                        ]
                    ]
                },
                "Predicates":[  
                    {  
                        "Type":"IPMatch",
                        "Negated":false,
                        "DataId":{  
                            "Ref":"wafgBlacklistIpSet"
                        }
                    }
                ]
            }
        },
        "wafrOwaspACL":{  
            "Type":"AWS::WAFRegional::WebACL",
            "Condition":"isRegional",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "owaspacl"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "owasp-acl"
                        ]
                    ]
                },
                "DefaultAction":{  
                    "Type":"ALLOW"
                },
                "Rules":[  
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":10,
                        "RuleId":{  
                            "Ref":"wafrSizeRestrictionRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":20,
                        "RuleId":{  
                            "Ref":"wafrBlacklistIpRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":30,
                        "RuleId":{  
                            "Ref":"wafrAuthTokenRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":40,
                        "RuleId":{  
                            "Ref":"wafrSQLiRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":50,
                        "RuleId":{  
                            "Ref":"wafrXSSRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":60,
                        "RuleId":{  
                            "Ref":"wafrPathsRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":70,
                        "RuleId":{  
                            "Ref":"wafrPHPInsecureRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":"COUNT"
                        },
                        "Priority":80,
                        "RuleId":{  
                            "Ref":"wafrCSRFRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":90,
                        "RuleId":{  
                            "Ref":"wafrServerSideIncludeRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":100,
                        "RuleId":{  
                            "Ref":"wafrAdminAccessRule"
                        }
                    }
                ]
            }
        },
        "wafgOwaspACL":{  
            "Type":"AWS::WAF::WebACL",
            "Condition":"isGlobal",
            "Properties":{  
                "MetricName":{  
                    "Fn::Join":[  
                        "",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "owaspacl"
                        ]
                    ]
                },
                "Name":{  
                    "Fn::Join":[  
                        "-",
                        [  
                            {  
                                "Ref":"stackPrefix"
                            },
                            "owasp-acl"
                        ]
                    ]
                },
                "DefaultAction":{  
                    "Type":"ALLOW"
                },
                "Rules":[  
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":10,
                        "RuleId":{  
                            "Ref":"wafgSizeRestrictionRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":20,
                        "RuleId":{  
                            "Ref":"wafgBlacklistIpRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":30,
                        "RuleId":{  
                            "Ref":"wafgAuthTokenRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":40,
                        "RuleId":{  
                            "Ref":"wafgSQLiRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":50,
                        "RuleId":{  
                            "Ref":"wafgXSSRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":60,
                        "RuleId":{  
                            "Ref":"wafgPathsRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":70,
                        "RuleId":{  
                            "Ref":"wafgPHPInsecureRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":80,
                        "RuleId":{  
                            "Ref":"wafgCSRFRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":90,
                        "RuleId":{  
                            "Ref":"wafgServerSideIncludeRule"
                        }
                    },
                    {  
                        "Action":{  
                            "Type":{  
                                "Ref":"ruleAction"
                            }
                        },
                        "Priority":100,
                        "RuleId":{  
                            "Ref":"wafgAdminAccessRule"
                        }
                    }
                ]
            }
        },
        "MyWebACLAssociation":{  
            "Type":"AWS::WAFRegional::WebACLAssociation",
            "Properties":{  
                "ResourceArn":{  
                    "Ref":"ElasticLoadBalancer"
                },
                "WebACLId":{  
                    "Ref":"wafrOwaspACL"
                }
            }
        }
    }
}
